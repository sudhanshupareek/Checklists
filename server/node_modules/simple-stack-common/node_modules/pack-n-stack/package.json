{
  "name": "pack-n-stack",
  "version": "0.1.2",
  "description": "Distributable and configurable middleware stacks",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/.bin/mocha -R spec"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/CamShaft/pack-n-stack.git"
  },
  "keywords": [
    "connect",
    "stack",
    "middleware",
    "express",
    "app"
  ],
  "author": {
    "name": "Cameron Bytheway",
    "email": "cameron@nujii.com"
  },
  "license": "MIT",
  "dependencies": {},
  "devDependencies": {
    "connect": "~2.7.1",
    "async": "~0.1.22",
    "mocha": "~1.7.4",
    "should": "~1.2.1",
    "supertest": "~0.5.1"
  },
  "readme": "Pack 'n Stack [![Build Status](https://secure.travis-ci.org/CamShaft/pack-n-stack.png?branch=master)](https://travis-ci.org/CamShaft/pack-n-stack)\n=============\n\nDistributable and configurable middleware stacks\n\nCheck out the [examples](https://github.com/CamShaft/pack-n-stack/tree/master/examples)!\n\n\nWhy\n---\n\nBecause configuring a default stack for many apps is hard. At the same time we need to allow configuration if necessary.\n\n[Pack 'n Stack](https://github.com/CamShaft/pack-n-stack) allows an organization to setup default stacks for different types of applications and gives the freedom to applications to modify those stacks based on the app's needs.\n\n\nAPI\n---\n\n### .use([route], [name], handle)\n\nWorks similar to [`connect.use`](https://github.com/senchalabs/connect) except it takes a `name` parameter for identifying middleware. If a `name` is not passed, it defaults to `handle.name`. Either must be present or an exception will be thrown.\n\n### .useBefore(name, [route], [handleName], handle)\n\nInserts `handle` before the middleware named `name`\n\n### .useAfter(name, [route], [handleName], handle)\n\nInserts `handle` after the middleware named `name`\n\n### .remove(name)\n\nRemoves the middleware named `name`\n\n### .replace(name, [handleName], handle)\n\nReplaces the middleware named `name` by `handleName` and `handle`\n\n### .swap(first, second)\n\nSwap middleware functions by name\n\n### .indexOf(name)\n\nFind index of middleware function by `name`\n\n\nLicense \n-------\n\n(The MIT License)\n\nCopyright (c) 2012 Cameron Bytheway &lt;cameron@nujii.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "pack-n-stack@0.1.2",
  "_from": "pack-n-stack@~0.1.0"
}
