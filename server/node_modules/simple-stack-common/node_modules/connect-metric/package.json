{
  "name": "connect-metric",
  "version": "0.2.1",
  "description": "Middleware that exposes metric for logging in the context of a user",
  "main": "index.js",
  "scripts": {
    "test": "NODE_ENV=test ./node_modules/.bin/mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/CamShaft/connect-metric.git"
  },
  "author": {
    "name": "Cameron Bytheway",
    "email": "cameron@nujii.com"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "e74671764dbb7ee26c051d8d6ccb704c60fc843a",
  "dependencies": {
    "metric-log": "~0.2.0"
  },
  "devDependencies": {
    "should": "~1.2.2",
    "mocha": "~1.8.2",
    "supertest": "~0.5.1",
    "connect": "~2.7.3"
  },
  "readme": "connect-metric [![Build Status](https://travis-ci.org/CamShaft/connect-metric.png?branch=master)](https://travis-ci.org/CamShaft/connect-metric)\n==============\n\nMiddleware that exposes [metric](https://github.com/CamShaft/metric-log) for logging in the context of a request\n\nUsage\n-----\n\n```js\nvar app = express()\n  , metric = require(\"connect-metric\");\n\napp.use(metric());\n\napp.get(\"/\", function(req, res){\n  req.metric(\"home_page\", 1, \"views\"); // measure=home_page val=1 units=views\n});\n```\n\nOptions\n-------\n\n```js\nmetric(context, options);\n```\n\n### context\n\nThe metric logger can inherit context\n\n```js\napp.use(metric({foo: \"bar\"}));\n\napp.get(\"/\", function(req, res){\n  req.metric(\"home_page\", 1, \"views\"); // foo=bar measure=home_page val=1 units=views\n});\n```\n\n### options\n\n#### options.request_id\n\nHeader name that provides a request id.\n",
  "_id": "connect-metric@0.2.1",
  "_from": "connect-metric@~0.2.0"
}
